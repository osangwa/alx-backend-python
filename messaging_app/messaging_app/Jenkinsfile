pipeline {
    agent any
    
    tools {
        python 'python3'
    }
    
    environment {
        GITHUB_CREDENTIALS = credentials('github-credentials')
    }
    
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                url: 'https://github.com/your-username/alx-backend-python.git',
                credentialsId: 'github-credentials'
            }
        }
        
        stage('Setup Python') {
            steps {
                sh 'python3 --version'
                sh 'pip3 --version'
            }
        }
        
        stage('Install Dependencies') {
            steps {
                script {
                    // Explicitly reference messaging_app/requirements.txt
                    sh 'pip3 install -r messaging_app/requirements.txt'
                }
            }
        }
        
        stage('Run Tests with pytest') {
            steps {
                script {
                    // Run pytest from the messaging_app directory
                    sh 'cd messaging_app && python3 -m pytest --junitxml=test-reports/results.xml'
                }
            }
            post {
                always {
                    junit 'messaging_app/test-reports/results.xml'
                }
            }
        }
        
        stage('Generate Test Report') {
            steps {
                script {
                    // Create test reports directory
                    sh 'mkdir -p messaging_app/test-reports'
                    
                    // Generate HTML report
                    sh 'cd messaging_app && python3 -m pytest --html=test-reports/report.html --self-contained-html'
                }
            }
        }
    }
    
    post {
        always {
            // Archive test results
            archiveArtifacts artifacts: 'messaging_app/test-reports/**/*', allowEmptyArchive: true
            
            // Publish HTML report
            publishHTML([
                allowMissing: true,
                alwaysLinkToLastBuild: true,
                keepAll: true,
                reportDir: 'messaging_app/test-reports',
                reportFiles: 'report.html',
                reportName: 'Pytest Test Report'
            ])
        }
        success {
            echo '✅ Pipeline completed successfully!'
        }
        failure {
            echo '❌ Pipeline failed!'
        }
    }
}